// automatically generated by the FlatBuffers compiler, do not modify

/**
 * @const
 * @namespace
 */
var ppx = ppx || {};

/**
 * @enum
 */
ppx.MessageBody = {
  NONE: 0, 0: 'NONE',
  Handshake: 1, 1: 'Handshake',
  HandshakeResult: 2, 2: 'HandshakeResult',
  Run: 3, 3: 'Run',
  RunResult: 4, 4: 'RunResult',
  Sample: 5, 5: 'Sample',
  SampleResult: 6, 6: 'SampleResult',
  Observe: 7, 7: 'Observe',
  ObserveResult: 8, 8: 'ObserveResult',
  Tag: 9, 9: 'Tag',
  TagResult: 10, 10: 'TagResult',
  Forward: 11, 11: 'Forward',
  ForwardResult: 12, 12: 'ForwardResult',
  Backward: 13, 13: 'Backward',
  BackwardResult: 14, 14: 'BackwardResult',
  BatchOperation: 15, 15: 'BatchOperation',
  BatchOperationResult: 16, 16: 'BatchOperationResult',
  Reset: 17, 17: 'Reset'
};

/**
 * @enum
 */
ppx.Distribution = {
  NONE: 0, 0: 'NONE',
  Normal: 1, 1: 'Normal',
  Uniform: 2, 2: 'Uniform',
  Categorical: 3, 3: 'Categorical',
  Poisson: 4, 4: 'Poisson'
};

/**
 * @constructor
 */
ppx.Message = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {ppx.Message}
 */
ppx.Message.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {ppx.Message=} obj
 * @returns {ppx.Message}
 */
ppx.Message.getRootAsMessage = function(bb, obj) {
  return (obj || new ppx.Message).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {boolean}
 */
ppx.Message.bufferHasIdentifier = function(bb) {
  return bb.__has_identifier('PPXF');
};

/**
 * @returns {ppx.MessageBody}
 */
ppx.Message.prototype.bodyType = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? /** @type {ppx.MessageBody} */ (this.bb.readUint8(this.bb_pos + offset)) : ppx.MessageBody.NONE;
};

/**
 * @param {flatbuffers.Table} obj
 * @returns {?flatbuffers.Table}
 */
ppx.Message.prototype.body = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__union(obj, this.bb_pos + offset) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
ppx.Message.startMessage = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {ppx.MessageBody} bodyType
 */
ppx.Message.addBodyType = function(builder, bodyType) {
  builder.addFieldInt8(0, bodyType, ppx.MessageBody.NONE);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} bodyOffset
 */
ppx.Message.addBody = function(builder, bodyOffset) {
  builder.addFieldOffset(1, bodyOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
ppx.Message.endMessage = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} offset
 */
ppx.Message.finishMessageBuffer = function(builder, offset) {
  builder.finish(offset, 'PPXF');
};

/**
 * @constructor
 */
ppx.Tensor = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {ppx.Tensor}
 */
ppx.Tensor.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {ppx.Tensor=} obj
 * @returns {ppx.Tensor}
 */
ppx.Tensor.getRootAsTensor = function(bb, obj) {
  return (obj || new ppx.Tensor).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {number} index
 * @returns {number}
 */
ppx.Tensor.prototype.data = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readFloat64(this.bb.__vector(this.bb_pos + offset) + index * 8) : 0;
};

/**
 * @returns {number}
 */
ppx.Tensor.prototype.dataLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Float64Array}
 */
ppx.Tensor.prototype.dataArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? new Float64Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param {number} index
 * @returns {number}
 */
ppx.Tensor.prototype.shape = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readInt32(this.bb.__vector(this.bb_pos + offset) + index * 4) : 0;
};

/**
 * @returns {number}
 */
ppx.Tensor.prototype.shapeLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Int32Array}
 */
ppx.Tensor.prototype.shapeArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? new Int32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
ppx.Tensor.startTensor = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} dataOffset
 */
ppx.Tensor.addData = function(builder, dataOffset) {
  builder.addFieldOffset(0, dataOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
ppx.Tensor.createDataVector = function(builder, data) {
  builder.startVector(8, data.length, 8);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addFloat64(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
ppx.Tensor.startDataVector = function(builder, numElems) {
  builder.startVector(8, numElems, 8);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} shapeOffset
 */
ppx.Tensor.addShape = function(builder, shapeOffset) {
  builder.addFieldOffset(1, shapeOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
ppx.Tensor.createShapeVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt32(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
ppx.Tensor.startShapeVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
ppx.Tensor.endTensor = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
ppx.Handshake = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {ppx.Handshake}
 */
ppx.Handshake.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {ppx.Handshake=} obj
 * @returns {ppx.Handshake}
 */
ppx.Handshake.getRootAsHandshake = function(bb, obj) {
  return (obj || new ppx.Handshake).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
ppx.Handshake.prototype.systemName = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
ppx.Handshake.startHandshake = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} systemNameOffset
 */
ppx.Handshake.addSystemName = function(builder, systemNameOffset) {
  builder.addFieldOffset(0, systemNameOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
ppx.Handshake.endHandshake = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
ppx.HandshakeResult = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {ppx.HandshakeResult}
 */
ppx.HandshakeResult.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {ppx.HandshakeResult=} obj
 * @returns {ppx.HandshakeResult}
 */
ppx.HandshakeResult.getRootAsHandshakeResult = function(bb, obj) {
  return (obj || new ppx.HandshakeResult).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
ppx.HandshakeResult.prototype.systemName = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
ppx.HandshakeResult.prototype.modelName = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
ppx.HandshakeResult.startHandshakeResult = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} systemNameOffset
 */
ppx.HandshakeResult.addSystemName = function(builder, systemNameOffset) {
  builder.addFieldOffset(0, systemNameOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} modelNameOffset
 */
ppx.HandshakeResult.addModelName = function(builder, modelNameOffset) {
  builder.addFieldOffset(1, modelNameOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
ppx.HandshakeResult.endHandshakeResult = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
ppx.Run = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {ppx.Run}
 */
ppx.Run.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {ppx.Run=} obj
 * @returns {ppx.Run}
 */
ppx.Run.getRootAsRun = function(bb, obj) {
  return (obj || new ppx.Run).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
ppx.Run.startRun = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
ppx.Run.endRun = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
ppx.RunResult = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {ppx.RunResult}
 */
ppx.RunResult.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {ppx.RunResult=} obj
 * @returns {ppx.RunResult}
 */
ppx.RunResult.getRootAsRunResult = function(bb, obj) {
  return (obj || new ppx.RunResult).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {ppx.Tensor=} obj
 * @returns {ppx.Tensor|null}
 */
ppx.RunResult.prototype.result = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new ppx.Tensor).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
ppx.RunResult.startRunResult = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} resultOffset
 */
ppx.RunResult.addResult = function(builder, resultOffset) {
  builder.addFieldOffset(0, resultOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
ppx.RunResult.endRunResult = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
ppx.Sample = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {ppx.Sample}
 */
ppx.Sample.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {ppx.Sample=} obj
 * @returns {ppx.Sample}
 */
ppx.Sample.getRootAsSample = function(bb, obj) {
  return (obj || new ppx.Sample).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
ppx.Sample.prototype.address = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
ppx.Sample.prototype.name = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @returns {ppx.Distribution}
 */
ppx.Sample.prototype.distributionType = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? /** @type {ppx.Distribution} */ (this.bb.readUint8(this.bb_pos + offset)) : ppx.Distribution.NONE;
};

/**
 * @param {flatbuffers.Table} obj
 * @returns {?flatbuffers.Table}
 */
ppx.Sample.prototype.distribution = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.__union(obj, this.bb_pos + offset) : null;
};

/**
 * @returns {boolean}
 */
ppx.Sample.prototype.control = function() {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : true;
};

/**
 * @returns {boolean}
 */
ppx.Sample.prototype.replace = function() {
  var offset = this.bb.__offset(this.bb_pos, 14);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
};

/**
 * @param {flatbuffers.Builder} builder
 */
ppx.Sample.startSample = function(builder) {
  builder.startObject(6);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} addressOffset
 */
ppx.Sample.addAddress = function(builder, addressOffset) {
  builder.addFieldOffset(0, addressOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} nameOffset
 */
ppx.Sample.addName = function(builder, nameOffset) {
  builder.addFieldOffset(1, nameOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {ppx.Distribution} distributionType
 */
ppx.Sample.addDistributionType = function(builder, distributionType) {
  builder.addFieldInt8(2, distributionType, ppx.Distribution.NONE);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} distributionOffset
 */
ppx.Sample.addDistribution = function(builder, distributionOffset) {
  builder.addFieldOffset(3, distributionOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} control
 */
ppx.Sample.addControl = function(builder, control) {
  builder.addFieldInt8(4, +control, +true);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} replace
 */
ppx.Sample.addReplace = function(builder, replace) {
  builder.addFieldInt8(5, +replace, +false);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
ppx.Sample.endSample = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
ppx.SampleResult = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {ppx.SampleResult}
 */
ppx.SampleResult.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {ppx.SampleResult=} obj
 * @returns {ppx.SampleResult}
 */
ppx.SampleResult.getRootAsSampleResult = function(bb, obj) {
  return (obj || new ppx.SampleResult).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {ppx.Tensor=} obj
 * @returns {ppx.Tensor|null}
 */
ppx.SampleResult.prototype.result = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new ppx.Tensor).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
ppx.SampleResult.startSampleResult = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} resultOffset
 */
ppx.SampleResult.addResult = function(builder, resultOffset) {
  builder.addFieldOffset(0, resultOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
ppx.SampleResult.endSampleResult = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
ppx.Observe = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {ppx.Observe}
 */
ppx.Observe.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {ppx.Observe=} obj
 * @returns {ppx.Observe}
 */
ppx.Observe.getRootAsObserve = function(bb, obj) {
  return (obj || new ppx.Observe).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
ppx.Observe.prototype.address = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
ppx.Observe.prototype.name = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @returns {ppx.Distribution}
 */
ppx.Observe.prototype.distributionType = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? /** @type {ppx.Distribution} */ (this.bb.readUint8(this.bb_pos + offset)) : ppx.Distribution.NONE;
};

/**
 * @param {flatbuffers.Table} obj
 * @returns {?flatbuffers.Table}
 */
ppx.Observe.prototype.distribution = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.__union(obj, this.bb_pos + offset) : null;
};

/**
 * @param {ppx.Tensor=} obj
 * @returns {ppx.Tensor|null}
 */
ppx.Observe.prototype.value = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? (obj || new ppx.Tensor).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
ppx.Observe.startObserve = function(builder) {
  builder.startObject(5);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} addressOffset
 */
ppx.Observe.addAddress = function(builder, addressOffset) {
  builder.addFieldOffset(0, addressOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} nameOffset
 */
ppx.Observe.addName = function(builder, nameOffset) {
  builder.addFieldOffset(1, nameOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {ppx.Distribution} distributionType
 */
ppx.Observe.addDistributionType = function(builder, distributionType) {
  builder.addFieldInt8(2, distributionType, ppx.Distribution.NONE);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} distributionOffset
 */
ppx.Observe.addDistribution = function(builder, distributionOffset) {
  builder.addFieldOffset(3, distributionOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} valueOffset
 */
ppx.Observe.addValue = function(builder, valueOffset) {
  builder.addFieldOffset(4, valueOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
ppx.Observe.endObserve = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
ppx.ObserveResult = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {ppx.ObserveResult}
 */
ppx.ObserveResult.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {ppx.ObserveResult=} obj
 * @returns {ppx.ObserveResult}
 */
ppx.ObserveResult.getRootAsObserveResult = function(bb, obj) {
  return (obj || new ppx.ObserveResult).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
ppx.ObserveResult.startObserveResult = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
ppx.ObserveResult.endObserveResult = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
ppx.Tag = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {ppx.Tag}
 */
ppx.Tag.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {ppx.Tag=} obj
 * @returns {ppx.Tag}
 */
ppx.Tag.getRootAsTag = function(bb, obj) {
  return (obj || new ppx.Tag).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
ppx.Tag.prototype.address = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
ppx.Tag.prototype.name = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {ppx.Tensor=} obj
 * @returns {ppx.Tensor|null}
 */
ppx.Tag.prototype.value = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? (obj || new ppx.Tensor).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
ppx.Tag.startTag = function(builder) {
  builder.startObject(3);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} addressOffset
 */
ppx.Tag.addAddress = function(builder, addressOffset) {
  builder.addFieldOffset(0, addressOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} nameOffset
 */
ppx.Tag.addName = function(builder, nameOffset) {
  builder.addFieldOffset(1, nameOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} valueOffset
 */
ppx.Tag.addValue = function(builder, valueOffset) {
  builder.addFieldOffset(2, valueOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
ppx.Tag.endTag = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
ppx.TagResult = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {ppx.TagResult}
 */
ppx.TagResult.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {ppx.TagResult=} obj
 * @returns {ppx.TagResult}
 */
ppx.TagResult.getRootAsTagResult = function(bb, obj) {
  return (obj || new ppx.TagResult).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
ppx.TagResult.startTagResult = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
ppx.TagResult.endTagResult = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
ppx.Forward = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {ppx.Forward}
 */
ppx.Forward.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {ppx.Forward=} obj
 * @returns {ppx.Forward}
 */
ppx.Forward.getRootAsForward = function(bb, obj) {
  return (obj || new ppx.Forward).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
ppx.Forward.prototype.name = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {ppx.Tensor=} obj
 * @returns {ppx.Tensor|null}
 */
ppx.Forward.prototype.input = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? (obj || new ppx.Tensor).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
ppx.Forward.startForward = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} nameOffset
 */
ppx.Forward.addName = function(builder, nameOffset) {
  builder.addFieldOffset(0, nameOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} inputOffset
 */
ppx.Forward.addInput = function(builder, inputOffset) {
  builder.addFieldOffset(1, inputOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
ppx.Forward.endForward = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
ppx.ForwardResult = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {ppx.ForwardResult}
 */
ppx.ForwardResult.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {ppx.ForwardResult=} obj
 * @returns {ppx.ForwardResult}
 */
ppx.ForwardResult.getRootAsForwardResult = function(bb, obj) {
  return (obj || new ppx.ForwardResult).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {ppx.Tensor=} obj
 * @returns {ppx.Tensor|null}
 */
ppx.ForwardResult.prototype.output = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new ppx.Tensor).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
ppx.ForwardResult.startForwardResult = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} outputOffset
 */
ppx.ForwardResult.addOutput = function(builder, outputOffset) {
  builder.addFieldOffset(0, outputOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
ppx.ForwardResult.endForwardResult = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
ppx.Backward = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {ppx.Backward}
 */
ppx.Backward.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {ppx.Backward=} obj
 * @returns {ppx.Backward}
 */
ppx.Backward.getRootAsBackward = function(bb, obj) {
  return (obj || new ppx.Backward).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
ppx.Backward.prototype.name = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {ppx.Tensor=} obj
 * @returns {ppx.Tensor|null}
 */
ppx.Backward.prototype.input = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? (obj || new ppx.Tensor).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {ppx.Tensor=} obj
 * @returns {ppx.Tensor|null}
 */
ppx.Backward.prototype.gradOutput = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? (obj || new ppx.Tensor).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
ppx.Backward.startBackward = function(builder) {
  builder.startObject(3);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} nameOffset
 */
ppx.Backward.addName = function(builder, nameOffset) {
  builder.addFieldOffset(0, nameOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} inputOffset
 */
ppx.Backward.addInput = function(builder, inputOffset) {
  builder.addFieldOffset(1, inputOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} gradOutputOffset
 */
ppx.Backward.addGradOutput = function(builder, gradOutputOffset) {
  builder.addFieldOffset(2, gradOutputOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
ppx.Backward.endBackward = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
ppx.BackwardResult = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {ppx.BackwardResult}
 */
ppx.BackwardResult.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {ppx.BackwardResult=} obj
 * @returns {ppx.BackwardResult}
 */
ppx.BackwardResult.getRootAsBackwardResult = function(bb, obj) {
  return (obj || new ppx.BackwardResult).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {ppx.Tensor=} obj
 * @returns {ppx.Tensor|null}
 */
ppx.BackwardResult.prototype.gradInput = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new ppx.Tensor).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
ppx.BackwardResult.startBackwardResult = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} gradInputOffset
 */
ppx.BackwardResult.addGradInput = function(builder, gradInputOffset) {
  builder.addFieldOffset(0, gradInputOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
ppx.BackwardResult.endBackwardResult = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
ppx.BatchOperation = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {ppx.BatchOperation}
 */
ppx.BatchOperation.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {ppx.BatchOperation=} obj
 * @returns {ppx.BatchOperation}
 */
ppx.BatchOperation.getRootAsBatchOperation = function(bb, obj) {
  return (obj || new ppx.BatchOperation).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {number} index
 * @param {ppx.Message=} obj
 * @returns {ppx.Message}
 */
ppx.BatchOperation.prototype.operations = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new ppx.Message).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
ppx.BatchOperation.prototype.operationsLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
ppx.BatchOperation.startBatchOperation = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} operationsOffset
 */
ppx.BatchOperation.addOperations = function(builder, operationsOffset) {
  builder.addFieldOffset(0, operationsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
ppx.BatchOperation.createOperationsVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
ppx.BatchOperation.startOperationsVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
ppx.BatchOperation.endBatchOperation = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
ppx.BatchOperationResult = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {ppx.BatchOperationResult}
 */
ppx.BatchOperationResult.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {ppx.BatchOperationResult=} obj
 * @returns {ppx.BatchOperationResult}
 */
ppx.BatchOperationResult.getRootAsBatchOperationResult = function(bb, obj) {
  return (obj || new ppx.BatchOperationResult).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {number} index
 * @param {ppx.Message=} obj
 * @returns {ppx.Message}
 */
ppx.BatchOperationResult.prototype.results = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new ppx.Message).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
ppx.BatchOperationResult.prototype.resultsLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
ppx.BatchOperationResult.startBatchOperationResult = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} resultsOffset
 */
ppx.BatchOperationResult.addResults = function(builder, resultsOffset) {
  builder.addFieldOffset(0, resultsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
ppx.BatchOperationResult.createResultsVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
ppx.BatchOperationResult.startResultsVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
ppx.BatchOperationResult.endBatchOperationResult = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
ppx.Reset = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {ppx.Reset}
 */
ppx.Reset.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {ppx.Reset=} obj
 * @returns {ppx.Reset}
 */
ppx.Reset.getRootAsReset = function(bb, obj) {
  return (obj || new ppx.Reset).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
ppx.Reset.startReset = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
ppx.Reset.endReset = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
ppx.Normal = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {ppx.Normal}
 */
ppx.Normal.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {ppx.Normal=} obj
 * @returns {ppx.Normal}
 */
ppx.Normal.getRootAsNormal = function(bb, obj) {
  return (obj || new ppx.Normal).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {ppx.Tensor=} obj
 * @returns {ppx.Tensor|null}
 */
ppx.Normal.prototype.mean = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new ppx.Tensor).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {ppx.Tensor=} obj
 * @returns {ppx.Tensor|null}
 */
ppx.Normal.prototype.stddev = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? (obj || new ppx.Tensor).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
ppx.Normal.startNormal = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} meanOffset
 */
ppx.Normal.addMean = function(builder, meanOffset) {
  builder.addFieldOffset(0, meanOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} stddevOffset
 */
ppx.Normal.addStddev = function(builder, stddevOffset) {
  builder.addFieldOffset(1, stddevOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
ppx.Normal.endNormal = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
ppx.Uniform = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {ppx.Uniform}
 */
ppx.Uniform.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {ppx.Uniform=} obj
 * @returns {ppx.Uniform}
 */
ppx.Uniform.getRootAsUniform = function(bb, obj) {
  return (obj || new ppx.Uniform).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {ppx.Tensor=} obj
 * @returns {ppx.Tensor|null}
 */
ppx.Uniform.prototype.low = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new ppx.Tensor).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {ppx.Tensor=} obj
 * @returns {ppx.Tensor|null}
 */
ppx.Uniform.prototype.high = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? (obj || new ppx.Tensor).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
ppx.Uniform.startUniform = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} lowOffset
 */
ppx.Uniform.addLow = function(builder, lowOffset) {
  builder.addFieldOffset(0, lowOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} highOffset
 */
ppx.Uniform.addHigh = function(builder, highOffset) {
  builder.addFieldOffset(1, highOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
ppx.Uniform.endUniform = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
ppx.Categorical = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {ppx.Categorical}
 */
ppx.Categorical.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {ppx.Categorical=} obj
 * @returns {ppx.Categorical}
 */
ppx.Categorical.getRootAsCategorical = function(bb, obj) {
  return (obj || new ppx.Categorical).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {ppx.Tensor=} obj
 * @returns {ppx.Tensor|null}
 */
ppx.Categorical.prototype.probs = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new ppx.Tensor).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
ppx.Categorical.startCategorical = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} probsOffset
 */
ppx.Categorical.addProbs = function(builder, probsOffset) {
  builder.addFieldOffset(0, probsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
ppx.Categorical.endCategorical = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
ppx.Poisson = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {ppx.Poisson}
 */
ppx.Poisson.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {ppx.Poisson=} obj
 * @returns {ppx.Poisson}
 */
ppx.Poisson.getRootAsPoisson = function(bb, obj) {
  return (obj || new ppx.Poisson).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {ppx.Tensor=} obj
 * @returns {ppx.Tensor|null}
 */
ppx.Poisson.prototype.rate = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new ppx.Tensor).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
ppx.Poisson.startPoisson = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} rateOffset
 */
ppx.Poisson.addRate = function(builder, rateOffset) {
  builder.addFieldOffset(0, rateOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
ppx.Poisson.endPoisson = function(builder) {
  var offset = builder.endObject();
  return offset;
};

// Exports for Node.js and RequireJS
this.ppx = ppx;
